spring:
  application:
    name: order-decision-service
  datasource:
    marketdata:
      url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/bitbuddy}
      username: ${DATASOURCE_USERNAME:bitbuddy}
      password: ${DATASOURCE_PASSWORD:secret}
      driver-class-name: org.postgresql.Driver

    orderdecision:
      url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/bitbuddy}
      username: ${DATASOURCE_USERNAME:bitbuddy}
      password: ${DATASOURCE_PASSWORD:secret}
      driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop   # oder validate/create-drop je nach Bedarf
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: order_decision
    show-sql: false
  flyway:
    enabled: false
  kafka:
    admin:
      auto-create: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      auto-offset-reset: latest
      group-id: order-decision-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "ch.ost.clde.dto"   # dein common DTO-Package
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always

ods:
  trading-pairs:
    - BTC/USDT
    - ETH/USDT
    - SOL/USDT
