# BitBuddy Services
market-data-service:
  enabled: false
  global:
    appName: 'market-data-service'
  deployment:
    image:
      repository: docker.io/franjofranjic
      tag: latest
      pullPolicy: Always
    env:
      - name: SERVER_PORT
        value: "8080"
    envFrom:
      - secretRef:
          name: bitbuddy-datasource-secret

order-decision-service:
  enabled: false
  global:
    appName: 'order-decision-service'
  deployment:
    image:
      repository: docker.io/franjofranjic
      tag: latest
      pullPolicy: Always
    env:
      - name: SERVER_PORT
        value: "8080"
    envFrom:
      - secretRef:
          name: bitbuddy-datasource-secret

order-execution-service:
  enabled: true
  global:
    appName: 'order-execution-service'
  deployment:
    image:
      repository: docker.io/franjofranjic
      tag: latest
      pullPolicy: Always
    env:
      - name: SERVER_PORT
        value: "8080"
    envFrom:
      - secretRef:
          name: bitbuddy-datasource-secret

datasource:
  username: bitbuddy
  password: secret
  url: jdbc:postgresql://bitbuddy-postgresql:5432/bitbuddy

postgresql:
  enabled: true
  auth:
    postgresPassword: admin1234
    username: bitbuddy
    password: secret
    database: bitbuddy

kafka:
  enabled: true
  # Use KRaft mode (no Zookeeper)
  kraft:
    enabled: true
  # Number of Kafka brokers (replicas)
  replicaCount: 1
  # Service ports
  service:
    type: ClusterIP
    ports:
      client: 9092
      interBroker: 9093
  # Listeners
  listeners:
    client:
      protocol: PLAINTEXT
    interBroker:
      protocol: PLAINTEXT
  # Advertised listeners (what clients see)
  advertisedListeners:
    client:
      name: CLIENT
      host: kafka.default.svc.cluster.local
      port: 9092
    interBroker:
      name: INTERNAL
      host: kafka-0.kafka-headless.default.svc.cluster.local
      port: 9093
  # Security protocol mapping
  listenerSecurityProtocolMap: CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT
  # Broker-to-broker communication
  interBrokerListenerName: INTERNAL
  # Extra env vars (if you want to mirror your Compose setup more literally)
  extraEnvVars:
    - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: "1"