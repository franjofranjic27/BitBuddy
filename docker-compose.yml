version: "3.9"

services:
  # --- Service 1: Market Data ---
  market-data-service:
    profiles:
      - app
    image: docker.io/franjofranjic/market-data-service:latest
    pull_policy: always
    container_name: market-data-service
    ports:
      - "8081:8080"
    environment:
      - DATASOURCE_URL=jdbc:postgresql://market-data-db:5432/market_data
      - DATASOURCE_USERNAME=marketdata
      - DATASOURCE_PASSWORD=secret
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - market-data-db

  market-data-db:
    image: postgres:16
    container_name: market-data-db
    environment:
      - POSTGRES_DB=market_data
      - POSTGRES_USER=marketdata
      - POSTGRES_PASSWORD=secret
    ports:
      - "5433:5432"  # extern erreichbar f√ºr Debug

  # --- Service 2: Trade Decision ---
  order-decision-service:
    profiles:
      - app
    image: docker.io/franjofranjic/order-decision-service:latest
    pull_policy: always
    container_name: trade-decision-service
    ports:
      - "8082:8080"
    environment:
      - DATASOURCE_URL=jdbc:postgresql://order-decision-db:5432/order_decision
      - DATASOURCE_USERNAME=orderdecision
      - DATASOURCE_PASSWORD=secret
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - order-decision-db

  order-decision-db:
    image: postgres:16
    container_name: order-decision-db
    environment:
      - POSTGRES_DB=order_decision
      - POSTGRES_USER=orderdecision
      - POSTGRES_PASSWORD=secret
    ports:
      - "5434:5432"

  # --- Service 3: Order Execution ---
  order-execution-service:
    profiles:
      - app
    image: docker.io/franjofranjic/order-execution-service
    pull_policy: always
    container_name: order-execution-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-execution-db:5432/order_execution
      - SPRING_DATASOURCE_USERNAME=orderexecution
      - SPRING_DATASOURCE_PASSWORD=secret
    depends_on:
      - order-execution-db

  order-execution-db:
    image: postgres:16
    container_name: order-execution-db
    environment:
      - POSTGRES_DB=order_execution
      - POSTGRES_USER=execution
      - POSTGRES_PASSWORD=secret
    ports:
      - "5435:5432"

  # --- Kafka ---
  kafka:
    image: apache/kafka-native
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      # Use DYNAMIC_CONFIG_ENABLED so that you can configure via environment
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      # Note: point kafka-ui at the Kafka broker's client port
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka