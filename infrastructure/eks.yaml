AWSTemplateFormatVersion: '2010-09-09'
Description: EKS Control Plane (ohne Node Group) â€“ Kubernetes 1.29

Parameters:
  ClusterName:
    Type: String
    Default: bitbuddy
  KubernetesVersion:
    Type: String
    AllowedValues: [ '1.29', '1.28', '1.27' ]
    Default: '1.29'
  ClusterRoleArn:
    Type: String
    Description: ARN der LabEksClusterRole (aus IAM kopieren)
  NodeRoleArn:
    Type: String
    Description: ARN der LabEksNodeRole (aus IAM kopieren)

Resources:
  EksCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: !Ref KubernetesVersion
      RoleArn: !Ref ClusterRoleArn
      ResourcesVpcConfig:
        SubnetIds:
          - !ImportValue bitbuddy-PrivateSubnetA
          - !ImportValue bitbuddy-PrivateSubnetB
        SecurityGroupIds:
          - !ImportValue bitbuddy-eks-sg
        EndpointPublicAccess: true
        EndpointPrivateAccess: true
      KubernetesNetworkConfig:
        IpFamily: ipv4

  EksNodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref EksCluster
      NodegroupName: bitbuddy-nodes
      NodeRole: !Ref NodeRoleArn
      Subnets:
        - !ImportValue bitbuddy-PrivateSubnetA
        - !ImportValue bitbuddy-PrivateSubnetB
      ScalingConfig:
        MinSize: 2
        DesiredSize: 2
        MaxSize: 4
      DiskSize: 20
      InstanceTypes:
        - t3.medium
      AmiType: AL2_x86_64

Outputs:
  ClusterName:
    Value: !Ref ClusterName
  ClusterEndpoint:
    Value: !GetAtt EksCluster.Endpoint
  ClusterCertificateAuthorityData:
    Value: !GetAtt EksCluster.CertificateAuthorityData